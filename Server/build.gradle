import java.text.SimpleDateFormat

repositories {
	mavenCentral()
	/*maven {
		url "https://maven.java.net/content/repositories/public"
	}*/
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "de.rallye.StadtRallye"

task buildInfo {
	ext.destinationDir = file("$buildDir/gitinfo")
	doLast {
		
		def cmd = "git rev-parse --short HEAD"
		def proc = cmd.execute()
		def revision = proc.text.trim()

		cmd = 'git status --porcelain'
		proc = cmd.execute()
		def output = proc.text.trim()
		def dirty = false

		output.eachLine {
			if (!it.startsWith("??"))
				dirty = true;
		}

		if (dirty) {
			revision = revision+ "-DEV"
		}


		def sdf = new SimpleDateFormat()
		sdf.applyPattern("dd.MM.yyyy '@' HH\\:mm\\:ss z")
		def time = sdf.format(new Date())



		destinationDir.mkdirs()


		ext.infoFile = file(destinationDir.getAbsolutePath() + '/git.properties')
		def content = "git.commit.id.description=" + revision + "\ngit.build.time=" + time + "\n"
		infoFile.write(content)
	}
}

processResources {
	it.dependsOn buildInfo
	from buildInfo.destinationDir
}
task copyToLib(type: Copy) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}
jar {
	doFirst {
	 
		manifest {
			attributes "Main-Class" : mainClassName
			attributes 'Class-Path': configurations.compile.collect { 'lib/'+it.getName() }.join(' ')
		}
    }
	it.dependsOn copyToLib
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
	compile 'com.drewnoakes:metadata-extractor:2.6.+'
	
	compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.12'
	compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.12'
	compile 'org.glassfish.jersey.media:jersey-media-multipart:2.12'

	compile 'org.glassfish.grizzly:grizzly-http-server:2.3.+'
	
	compile 'org.glassfish.grizzly:grizzly-websockets:2.3.+'

	compile 'org.glassfish.grizzly:grizzly-http-servlet:2.3.+' //Needed for websockets
	compile 'org.apache.tomcat:tomcat-servlet-api:8.0.+' //Needed for websockets
            

	//Jackson
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.+'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.+'

	//MySQL
	compile 'mysql:mysql-connector-java:5.1.+'
	compile 'com.mchange:c3p0:0.9.2.+'


	//Log4j
	//compile 'org.apache.logging.log4j:log4j-api:2.+'
	compile 'org.apache.logging.log4j:log4j-core:2.+'

	// Google Cloud Messaging (deprecated)
	compile 'com.ganyo:gcm-server:1.+'

	// Primitive JSON (used in Push service)
	compile 'org.json:json:20140107'
	
	compile 'commons-io:commons-io:2.4'
	//compile 'com.google.inject:guice:3.0'

	//Testing
	testCompile 'junit:junit:4.11'
	testCompile 'org.apache.httpcomponents:httpclient:4.3.+'	
	
	compile project(':common:RallyeStructures')
}
