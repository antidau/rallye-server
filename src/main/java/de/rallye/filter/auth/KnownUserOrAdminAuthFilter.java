package de.rallye.filter.auth;

import java.security.Principal;

import javax.ws.rs.WebApplicationException;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

public class KnownUserOrAdminAuthFilter extends BaseAuthFilter{

	protected Response getUnauthorized(String message) {
		if (message!=null)
			return Response.status(Status.UNAUTHORIZED).entity(message).header("WWW-Authenticate", "Basic realm=\"RallyeAuth\"").build();
		else
			return Response.status(Status.UNAUTHORIZED).header("WWW-Authenticate", "Basic realm=\"RallyeAuth\"").build();
	}
	
	protected Response getUnauthorized() {
		return getUnauthorized(null);
	}
	
	KnownUserAuthFilter knownUserAuth = new KnownUserAuthFilter();
	AdminAuthFilter adminAuth = new AdminAuthFilter();

	@Override
	protected Principal checkAuthentication(
			ContainerRequestContext containerRequest, String[] login) {
		try {
			return knownUserAuth.checkAuthentication(containerRequest, login);
		} catch (WebApplicationException e) {
			try {
				return adminAuth.checkAuthentication(containerRequest, login);
			} catch (WebApplicationException f) {
				//Rethrow exception generated by knownUserAuth,
				throw e;
			}
		}
	}

}
